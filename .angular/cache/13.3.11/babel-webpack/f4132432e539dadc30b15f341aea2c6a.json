{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { environment } from 'src/environments/environment';\nimport Dexie from 'dexie';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./online-offline.service\";\nexport let SeguroService = /*#__PURE__*/(() => {\n  class SeguroService {\n    constructor(http, onlineOfflineService) {\n      this.http = http;\n      this.onlineOfflineService = onlineOfflineService;\n      this.registrarEventos(onlineOfflineService);\n      this.criarDatabase();\n    }\n\n    criarDatabase() {\n      this.db = new Dexie('database');\n      this.db.version(1).stores({\n        seguros: 'placaCarro'\n      });\n    }\n\n    registrarEventos(onlineOfflineService) {\n      onlineOfflineService.trocaConexao.subscribe(online => {\n        if (online) {\n          console.log('enviando os itens do IndexedDb para a API');\n          this.enviarItensdoIndexedDb();\n        } else {\n          console.log('Offline. Salvando no IndexedDb');\n        }\n      });\n    }\n\n    salvar(seguro) {\n      if (this.onlineOfflineService.isOnline) {\n        this.salvarAPI(seguro);\n      } else {\n        this.salvarIndexedDb(seguro);\n      }\n    }\n\n    salvarAPI(seguro) {\n      console.log('mandando pra API');\n      this.http.post(environment.API + '/api/seguros', seguro).subscribe(() => {\n        alert('Seguro salvo com sucesso!');\n      }, err => console.error('Erro ao salvar seguro', err));\n    }\n\n    salvarIndexedDb(seguro) {\n      this.db.seguros.add(seguro).then(() => __awaiter(this, void 0, void 0, function* () {\n        const todosSeguros = yield this.db.seguros.toArray();\n        console.log('item salvo no IndexedDb', todosSeguros);\n      })).catch(err => console.log('erro ao incluir item no IndexedDb', err));\n    }\n\n    enviarItensdoIndexedDb() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const todosSeguros = yield this.db.seguros.toArray();\n        console.log(todosSeguros);\n        todosSeguros.forEach(item => __awaiter(this, void 0, void 0, function* () {\n          yield this.salvarAPI(item);\n          this.db.seguros.delete(item.placaCarro).then(() => {\n            console.log(`seguro com a placa ${item.placaCarro} deletado do IndexedDb`);\n          });\n        }));\n      });\n    }\n\n    listar() {\n      return this.http.get(environment.API + '/api/seguros');\n    }\n\n  }\n\n  SeguroService.ɵfac = function SeguroService_Factory(t) {\n    return new (t || SeguroService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OnlineOfflineService));\n  };\n\n  SeguroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SeguroService,\n    factory: SeguroService.ɵfac,\n    providedIn: 'root'\n  });\n  return SeguroService;\n})();","map":null,"metadata":{},"sourceType":"module"}